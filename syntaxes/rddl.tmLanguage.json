{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "RDDL",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#types" },
		{ "include": "#fluent-types" },
		{ "include": "#requirement-types" },
		{ "include": "#keywords" },
		{ "include": "#numbers" },
		{ "include": "#literals" },
		{ "include": "#builtin-functions" },
		{ "include": "#aggregation-functions" },
		{ "include": "#discrete-distribution-functions" },
		{ "include": "#continuous-distribution-functions" },
		{ "include": "#component-properties" },
		{ "include": "#components" }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "(//[^\n]*)"
				}
			]
		},
		"components": {
			"patterns": [
				{
					"name": "entity.name.type.class",
					"match": "\\b(domain|instance|non-fluents)\\b"
				}
			]
		},
		"component-properties": {
			"patterns": [
				{
					"name": "variable.other.property",
					"match": "\\b(requirements|types|objects|pvariables|cpfs|reward|action-preconditions|state-invariants|termination|init-state|max-nondef-actions|horizon|discount|max-nondef-actions)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "support.type",
					"match": "\\b(bool|int|real|object)\\b"
				}
			]
		},
		"fluent-types": {
			"patterns": [
				{
					"name": "entity.name.type",
					"match": "\\b(state-fluent|action-fluent|observ-fluent|interm-fluent|derived-fluent|non-fluent)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(if|then|else|switch|case|default)\\b"
				}
			]
		},
		"requirement-types": {
			"patterns": [
				{
					"name": "entity.name.type",
					"match": "\\b(concurrent|constrained-state|continuous|cpf-deterministic|integer-valued|intermediate-nodes|multivalued|partially-observed|reward-deterministic)\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b(((0x|0b|0o|#)[\\da-fA-F]+)|((\\d*\\.)?\\d+))\\b"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.language",
					"match": "\\b(true|false|pos-inf)\\b"
				}
			]
		},
		"builtin-functions": {
			"patterns": [
				{
					"name": "support.function",
					"match": "\\b(exp|log|sin|cos|tan|min|max|pow|sqrt)\\b"
				}
			]
		},
		"aggregation-functions": {
			"patterns": [
				{
					"name": "support.function",
					"match": "\\b(sum|prod|minimum|maximum|exists|forall|argmax|argmin)_\\b"
				}
			]
		},
		"discrete-distribution-functions": {
			"patterns": [
				{
					"name": "support.function",
					"match": "\\b(KronDelta|Bernoulli|Discrete|UnnormDiscrete|Poisson|Binomial|NegativeBinomial|Geometric)\\b"
				}
			]
		},
		"continuous-distribution-functions": {
			"patterns": [
				{
					"name": "support.function",
					"match": "\\b(DiracDelta|Normal|Uniform|Exponential|Weibull|Gamma|Beta|Pareto|Student|Gumbel|Laplace|Cauchy|Gompertz|ChiSquare|Kumaraswamy)\\b"
				}
			]
		}
	},
	"scopeName": "domain.rddl"
}
